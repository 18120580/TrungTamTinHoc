<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button14.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KAAAAABJRU5ErkJggg==
</value>
  </data>
</root>